apply plugin: 'java'

group = 'net.runarmc'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }

    maven {
        url 'https://maven.runarmc.net/public'
    }
}

dependencies {
    compileOnly "io.github.waterfallmc:waterfall-api:1.12-SNAPSHOT"
    implementation("net.runarmc:kernel:1.0.2")
    implementation("com.esotericsoftware:kryonet:2.22.0-RC1")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9")
    implementation("org.jetbrains.kotlin:kotlin-reflect:1.4.0")
    implementation("org.javassist:javassist:3.15.0-GA")

    implementation("org.yaml:snakeyaml:1.21")

    implementation("net.runarmc:eventbus:1.0.0")
    implementation("net.runarmc:packet-library:1.0.0")
    implementation("com.google.code.gson:gson:2.10.1")
    implementation("net.runarmc:eventbus:1.0.0")


}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'net.minecraft.client.main.Main'
    }
    archiveClassifier = "all"
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    expand props
    filteringCharset 'UTF-8'
    filesMatching('bungee.yml') {
        expand props
    }
}
